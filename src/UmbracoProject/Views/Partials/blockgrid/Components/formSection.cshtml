@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Web
@using Umbraco.Forms.Web
@using Umbraco.Forms.Web.Models
@using Microsoft.AspNetCore.Http
@using UmbracoProject.App_Code.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<BlockGridItem<FormSection>>
@inject IHttpContextAccessor _contextAccessor;

@{
    var content = Model?.Content;
    var settings = Model?.Settings as SectionSettingModel;

}

<!--------------------------------------section contact-form---------------------------->
<div class="alt-contact @settings?.Theme">
    <div class="container">
        <div class="row">
            @if (content?.Blocks?.Count > 0)
            {
                int index = 0;
                @foreach (var item in content.Blocks)
                {
                    @if (item?.Content?.ContentType?.Alias == FormSectionContentBlock.ModelTypeAlias)
                    {
                        var itemModel = item?.Content as FormSectionContentBlock;
                        <div class="col-lg-6">
                            <div class="section-detail @(index == 1?"ms-auto":"")" >
                                <div class="section-content">
                                    <h2>
                                        @itemModel?.HeadingText
                                    </h2>
                                    @Html?.Raw(itemModel?.DescriptionText)
                                </div>
                                @if (!string.IsNullOrWhiteSpace(itemModel?.Image?.MediaUrl()))
                                {
                                    <div class="buy_charging-doodles" style="text-align:@(index == 1 ? "left":"right")">
                                        <img src="@itemModel?.Image?.MediaUrl()" class="img-fluid" alt="">
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    @if (item?.Content?.ContentType?.Alias == FormSectionFormBlock.ModelTypeAlias)
                    {
                        var formContentModel = item?.Content as FormSectionFormBlock;

                        var model = new UmbracoProject.App_Code.Models.FormViewModel()
                        {
                            FormId = formContentModel?.Form ?? Guid.Empty,
                            FormContent = formContentModel
                        };

                        <div class="col-lg-6">
                            <div class="contact-form">
                                    @await Html.PartialAsync("~/Views/Partials/_RenderForm.cshtml", model)
                            </div>
                        </div>
                    }
                    index++;
                }
            }
        </div>
    </div>
</div>
<script src="~/assets/js/forms.output.min.js"></script>
