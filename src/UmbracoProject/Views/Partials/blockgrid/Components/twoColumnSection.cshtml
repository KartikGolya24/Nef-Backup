@using Umbraco.Cms.Core.Models.Blocks
@using UmbracoProject.App_Code.Helpers
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<BlockGridItem<TwoColumnSection>>

@{
    var content = Model?.Content;
    var settings = Model?.Settings as GlobalSettingModel;
}

@if (content?.SectionColumn?.Count > 0)
{
    var padding = !string.IsNullOrWhiteSpace(settings?.PaddingTopBottom) ? $"padding:{settings?.PaddingTopBottom} 0px" : "";
    int index = 0;
    <div class="alt-section @settings?.Theme @settings?.Class" style="@padding">
        <div class="container">
            <div class="row align-items-center">
                @foreach (var item in content?.SectionColumn)
                {

                    var alias = item?.Content?.ContentType?.Alias;
                    @if (alias == TwoColumnContentBlock.ModelTypeAlias)
                    {
                        var contentBlock = item?.Content as TwoColumnContentBlock;
                        
                        <div class="col-lg-6">
                            <div class="section-detail @(index == 1?"ms-auto":"")">
                                <div class="section-content black-950">
                                    @if (!string.IsNullOrWhiteSpace(contentBlock?.HeadingText))
                                    {
                                        <h2>@contentBlock?.HeadingText</h2>
                                    }

                                    @if (contentBlock?.ContentBlocks?.Count > 0)
                                    {
                                        @foreach (var block in contentBlock?.ContentBlocks)
                                        {
                                            var setting = block?.Settings as TwoColumnContentBlocksSettingModel;
                                            var aliasName = block?.Content?.ContentType?.Alias;
                                            if (aliasName == DescriptionText.ModelTypeAlias)
                                            {
                                                var richTextContent = block?.Content as DescriptionText;
                                                @Html?.Raw(richTextContent?.RichTextContent)
                                            }
                                            else if (aliasName == TextListWithIcon.ModelTypeAlias)
                                            {
                                                var textList = block?.Content as TextListWithIcon;
                                                @if (textList?.TextList?.Count > 0)
                                                {
                                                    <ul class="@setting?.CssClass">
                                                        @Html.GetBlockListHtml(textList?.TextList)
                                                    </ul>
                                                }
                                            }
                                            else if (aliasName == NumbringListBlock.ModelTypeAlias)
                                            {

                                                var numberingList = block?.Content as NumbringListBlock;
                                                @if (numberingList?.Blocks?.Count > 0)
                                                {
                                                    var count = 1;
                                                    <ul class="square_icon_list mb-0 @setting?.CssClass">
                                                        @foreach (var listText in numberingList?.Blocks)
                                                        {
                                                            var listModel = listText?.Content as TwoColumnNumberingTextList;

                                                            <li class="align-items-start">
                                                                <div class="icon-box">
                                                                    <span>@(count++)</span>
                                                                </div>
                                                                <div class="list-information-text">
                                                                    <h5 class="list-inner-title">@listModel?.Title</h5>
                                                                    <p>@listModel?.Description</p>
                                                                </div>
                                                            </li>
                                                        }
                                                    </ul>
                                                }
                                            }
                                            else if (aliasName == TwoColumnDotList.ModelTypeAlias)
                                            {
                                                var dotListModel = block?.Content as TwoColumnDotList;
                                                @if (dotListModel?.DotList?.Count() > 0)
                                                {
                                                    <div class="dot-list-outer">
                                                        <p>@dotListModel?.ListTitle</p>
                                                        <ul class="section_dot_list @setting?.CssClass">
                                                            @foreach (var text in dotListModel?.DotList)
                                                            {
                                                                <li>
                                                                    <p>@text</p>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                </div>

                                @if (contentBlock?.ButtonList?.Count > 0)
                                {
                                    <div class="multiple-buttons">
                                        @Html.GetBlockListHtml(contentBlock?.ButtonList)
                                    </div>
                                }
                            </div>
                        </div>

                    }
                    else if (alias == TwoColumnMediaBlock.ModelTypeAlias)
                    {
                        var mediaBlock = item?.Content as TwoColumnMediaBlock;

                        <div class="col-lg-6">
                            @if (mediaBlock?.Video?.Content != null)
                            {
                                <div class="section-img video-img">
                                    <img src="@mediaBlock?.Image?.GetWebp(534,0)" class="img-fluid h-400" alt="img" />
                                    <button type="button" data-href="@mediaBlock?.Video?.MediaUrl()" class="videoBtn" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd"
                                                  clip-rule="evenodd"
                                                  d="M5.14854 0.856903C4.66921 0.856903 4.1979 0.978984 3.779 1.21147C3.35204 1.42935 2.99164 1.75848 2.73601 2.16427C2.47646 2.57623 2.33481 3.05143 2.32641 3.53826L2.32629 20.4466L2.32641 20.4613C2.33481 20.9482 2.47646 21.4234 2.73601 21.8353C2.99164 22.2411 3.35204 22.5703 3.779 22.7881C4.1979 23.0206 4.66921 23.1427 5.14854 23.1427C5.63506 23.1427 6.11331 23.0168 6.53689 22.7775C6.54675 22.772 6.55649 22.7662 6.56611 22.7602L20.2397 14.3032C20.664 14.0888 21.0221 13.7628 21.2752 13.3598C21.5371 12.9429 21.6761 12.4605 21.6761 11.9681C21.6761 11.4757 21.5371 10.9933 21.2752 10.5763C21.0218 10.1729 20.6632 9.84664 20.2384 9.6323L6.56365 1.23778C6.55484 1.23236 6.54591 1.22711 6.53689 1.22201C6.11331 0.982675 5.63506 0.856903 5.14854 0.856903Z"
                                                  fill="white" />
                                        </svg>
                                        @mediaBlock?.VideoButtonText
                                    </button>

                                    @if (mediaBlock?.PositionImages?.Count > 0)
                                    {
                                        @foreach (var image in mediaBlock?.PositionImages)
                                        {
                                            var imageModel = image?.Content as PositionImagesBlock;
                                            <div class="section-position-img @imageModel?.Position d-block">
                                                <img src="@imageModel?.Image?.MediaUrl()" class="img-fluid" alt="" />
                                            </div>
                                        }
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="section-img overflow-hidden overflow-md-visible">

                                    <img src="@mediaBlock?.Image?.GetWebp(534,0)" class="img-fluid" alt="img" />

                                    @if (mediaBlock?.PositionImages?.Count > 0)
                                    {
                                        @foreach (var image in mediaBlock?.PositionImages)
                                        {
                                            var imageModel = image?.Content as PositionImagesBlock;
                                            <div class="section-position-img @imageModel?.Position d-block">
                                                <img src="@imageModel?.Image?.MediaUrl()" class="img-fluid" alt="" />
                                            </div>
                                        }
                                    }
                                </div>
                            }
                        </div>
                    }
                    index++;
                }
            </div>
        </div>
    </div>

}
