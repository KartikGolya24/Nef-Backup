@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<InformationPage>
@{
    Layout = "Master.cshtml";
}
<!---------------------------------- other-section-banner ------------------------->
<div class="section-banner">
    <div class="container">
        <div class="section-banner-inner">
            <h1>@Model?.Heading</h1>
            @Html?.Raw(Model?.DescriptionText)
            <div class="multiple-buttons">
                @Html?.GetBlockListHtml(Model?.ButtonList)
            </div>
        </div>
        <div class="doodles-img">
            <img src="@Model?.IconImage?.MediaUrl()" class="img-fluid" alt="img">
        </div>
    </div>
</div>



<!---------------------------------- section-sidebar-------------------- ------->
<div class="status-alt-sidebar">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="status-left-part">
                    <div class="status-boxes-outer">
                        @if (Model?.Blocks?.Count > 0)
                        {
                            @foreach (var item in Model?.Blocks)
                            {
                                var alias = item?.Content?.ContentType?.Alias;
                                @if (alias == "latestUpdateSectionBlock")
                                {
                                    var itemModel = item?.Content as LatestUpdateSectionBlock;

                                    <div class="status-box @itemModel?.AddSectionClass">
                                        @if (!string.IsNullOrWhiteSpace(itemModel?.MapIframeSrc))
                                        {
                                            <div class="map-section">
                                                <h2 class="mb-0">@itemModel?.Heading</h2>
                                                <div id="map-container">
                                                 <p>Loading map...</p>
                                                </div>
                                               
                                                <div class="box-footer">
                                                    @Html?.Raw(itemModel?.OpratingMapDescription)
                                                    <a href="@itemModel?.ButtonLink?.Url" class="btn light_blue_btn">
                                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <g clip-path="url(#clip0_25_3041)">
                                                                <path d="M2.0714 7.11625C1.51266 7.01905 1.51266 6.21694 2.0714 6.11974C4.09562 5.76758 5.70561 4.22579 6.14497 2.21868L6.17866 2.06483C6.29954 1.51261 7.08582 1.50917 7.21153 2.06031L7.25242 2.23961C7.70805 4.23723 9.31848 5.76602 11.3371 6.11719C11.8987 6.21491 11.8987 7.02109 11.3371 7.11878C9.31848 7.46997 7.70805 8.99876 7.25242 10.9964L7.21153 11.1757C7.08582 11.7268 6.29954 11.7234 6.17866 11.1712L6.14497 11.0173C5.70561 9.01022 4.09562 7.46841 2.0714 7.11625Z" stroke="#ffffff" stroke-width="1.71003" stroke-linecap="round" stroke-linejoin="round"></path>
                                                                <path d="M11.2527 21.6614C10.4273 22.1928 9.44491 22.4258 8.4688 22.3215C7.49267 22.2172 6.58165 21.7821 5.88717 21.0882L5.28216 20.4832C5.0138 20.2119 4.86328 19.8457 4.86328 19.4642C4.86328 19.0826 5.0138 18.7166 5.28216 18.4453L7.82959 15.9137C8.09813 15.6464 8.46165 15.4963 8.8406 15.4963C9.21954 15.4963 9.58306 15.6464 9.85161 15.9137C10.1229 16.1821 10.489 16.3326 10.8706 16.3326C11.2521 16.3326 11.6183 16.1821 11.8895 15.9137L15.9495 11.8538C16.2179 11.5825 16.3684 11.2164 16.3684 10.8348C16.3684 10.4532 16.2179 10.0871 15.9495 9.81583C15.6821 9.54729 15.532 9.18376 15.532 8.80482C15.532 8.42587 15.6821 8.06235 15.9495 7.7938L18.4014 5.24638C18.6727 4.97804 19.0389 4.82751 19.4203 4.82751C19.802 4.82751 20.1682 4.97804 20.4393 5.24638L21.0443 5.85139C21.7506 6.53607 22.2007 7.44226 22.3195 8.41872C22.4382 9.3952 22.2187 10.3829 21.6971 11.2169C18.9209 15.3386 15.3744 18.8852 11.2527 21.6614Z" stroke="#ffffff" stroke-width="1.71003" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            </g>
                                                            <defs>
                                                                <clipPath id="clip0_25_3041">
                                                                    <rect width="24" height="24" fill="white"></rect>
                                                                </clipPath>
                                                            </defs>
                                                        </svg>
                                                        @itemModel?.ButtonLink?.Name
                                                    </a>
                                                </div>
                                            </div>
                                             <script>
                                                document.addEventListener("DOMContentLoaded", function () {
                                                 const mapContainer = document.getElementById("map-container");

                                                     function loadIframe() {
                                                         if (!mapContainer.querySelector("iframe")) { // Prevent duplicate iframe
                                                             const iframe = document.createElement("iframe");
                                                                     iframe.src = "@itemModel?.MapIframeSrc";
                                                                     iframe.width = "100%";
                                                                     iframe.height = "400";
                                                                     iframe.style.border = "0";
                                                                     iframe.allowFullscreen = true;
                                                                     iframe.referrerPolicy = "no-referrer-when-downgrade";
                                                                     iframe.loading = "lazy"; // Extra lazy loading
                                                    
                                                                     mapContainer.innerHTML = ""; // Remove "Loading map..."
                                                                     mapContainer.appendChild(iframe);
                                                                 }
                                                             }
                                                    
                                                             const observer = new IntersectionObserver((entries) => {
                                                                 entries.forEach(entry => {
                                                                     if (entry.isIntersecting) {
                                                                         loadIframe();
                                                                         observer.disconnect(); // Stop observing after loading
                                                                     }
                                                                 });
                                                             }, { threshold: 0.2 }); // Load earlier
                                                    
                                                             observer.observe(mapContainer);
                                                         });
                                         </script>
                                        }
                                        else
                                        {
                                            <div class="box-header">
                                                <h2>@itemModel?.Heading</h2>
                                                @Html?.Raw(itemModel?.Description)
                                            </div>

                                            <div class="box-footer">
                                                @Html?.Raw(itemModel?.OpratingMapDescription)
                                                <a href="@itemModel?.ButtonLink?.Url" class="btn light_blue_btn">
                                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <g clip-path="url(#clip0_25_3041)">
                                                            <path d="M2.0714 7.11625C1.51266 7.01905 1.51266 6.21694 2.0714 6.11974C4.09562 5.76758 5.70561 4.22579 6.14497 2.21868L6.17866 2.06483C6.29954 1.51261 7.08582 1.50917 7.21153 2.06031L7.25242 2.23961C7.70805 4.23723 9.31848 5.76602 11.3371 6.11719C11.8987 6.21491 11.8987 7.02109 11.3371 7.11878C9.31848 7.46997 7.70805 8.99876 7.25242 10.9964L7.21153 11.1757C7.08582 11.7268 6.29954 11.7234 6.17866 11.1712L6.14497 11.0173C5.70561 9.01022 4.09562 7.46841 2.0714 7.11625Z" stroke="#ffffff" stroke-width="1.71003" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M11.2527 21.6614C10.4273 22.1928 9.44491 22.4258 8.4688 22.3215C7.49267 22.2172 6.58165 21.7821 5.88717 21.0882L5.28216 20.4832C5.0138 20.2119 4.86328 19.8457 4.86328 19.4642C4.86328 19.0826 5.0138 18.7166 5.28216 18.4453L7.82959 15.9137C8.09813 15.6464 8.46165 15.4963 8.8406 15.4963C9.21954 15.4963 9.58306 15.6464 9.85161 15.9137C10.1229 16.1821 10.489 16.3326 10.8706 16.3326C11.2521 16.3326 11.6183 16.1821 11.8895 15.9137L15.9495 11.8538C16.2179 11.5825 16.3684 11.2164 16.3684 10.8348C16.3684 10.4532 16.2179 10.0871 15.9495 9.81583C15.6821 9.54729 15.532 9.18376 15.532 8.80482C15.532 8.42587 15.6821 8.06235 15.9495 7.7938L18.4014 5.24638C18.6727 4.97804 19.0389 4.82751 19.4203 4.82751C19.802 4.82751 20.1682 4.97804 20.4393 5.24638L21.0443 5.85139C21.7506 6.53607 22.2007 7.44226 22.3195 8.41872C22.4382 9.3952 22.2187 10.3829 21.6971 11.2169C18.9209 15.3386 15.3744 18.8852 11.2527 21.6614Z" stroke="#ffffff" stroke-width="1.71003" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        </g>
                                                        <defs>
                                                            <clipPath id="clip0_25_3041">
                                                                <rect width="24" height="24" fill="white"></rect>
                                                            </clipPath>
                                                        </defs>
                                                    </svg>
                                                    @itemModel?.ButtonLink?.Name
                                                </a>
                                            </div>
                                        }

                                        @if (itemModel?.UpdatesBlock?.Count > 0)
                                        {
                                            var sortedBlocks = itemModel.UpdatesBlock
                                            .OrderByDescending(block => (block?.Content as LatestUpdatesBlocks)?.Time)
                                            .ToList();
                                            var count = 1;


                                            <div class="update-power">
                                                <h4>@itemModel?.UpdateHeading</h4>
                                                <div class="update-power-list">
                                                    @foreach (var block in sortedBlocks)
                                                    {
                                                        var blockModel = block?.Content as LatestUpdatesBlocks;

                                                        <div class="update-power-box turquoise_bg" style="@(count > 4 ?"display:none":"")">
                                                            <span class="caption">@blockModel?.Time.ToString("dd.MM.yyyy, 'Kl.' HH.mm")</span>

                                                            @Html?.Raw(blockModel?.Description)
                                                        </div>
                                                        count++;
                                                    }
                                                </div>
                                                @if (itemModel?.UpdatesBlock?.Count > 4)
                                                {
                                                    <button type="button" class="btn border_black-200 white-bg_btn black-950 load_more_update">
                                                        @itemModel?.LoadMoreButtonText
                                                    </button>
                                                }
                                            </div>
                                        }
                                    </div>

                                }
                                @if (alias == "commonInfoSectionBlock")
                                {
                                    var itemModel = item?.Content as CommonInfoSectionBlock;
                                    <div class="status-box">

                                        <div class="box-header">
                                            <h2>@itemModel?.Heading</h2>
                                            @Html?.Raw(itemModel?.Description)
                                        </div>

                                        @if (itemModel?.AccordionList?.Count > 0)
                                        {
                                            var headingCount = 0;
                                            var collapseCount = 0;
                                            <div class="data-faq">
                                                <div class="accordion accordion-flush accordian-section " id="accordionFlushExample">
                                                    @foreach (var accordion in itemModel?.AccordionList)
                                                    {
                                                        var flushHeading = $"flush-heading{headingCount++}";
                                                        var flushCollapse = $"flush-collapse{collapseCount++}";
                                                        var accordionModel = accordion?.Content as AccordionBlock;
                                                        <div class="accordion-item">
                                                            <h2 class="accordion-header " id="@flushHeading">
                                                                <button class="accordion-button collapsed  black-950" type="button" data-bs-toggle="collapse" data-bs-target="#@flushCollapse" aria-expanded="false" aria-controls="@flushCollapse">
                                                                    @accordionModel?.Heading
                                                                </button>
                                                            </h2>
                                                            <div id="@flushCollapse" class="accordion-collapse collapse" aria-labelledby="@flushHeading" data-bs-parent="#accordionFlushExample">
                                                                <div class="accordion-body black-700 p-0">
                                                                    @accordionModel?.DescriptionText
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }

                                        <div class="box-footer">
                                            @if (!string.IsNullOrWhiteSpace(itemModel?.HelpDescriptionText))
                                            {
                                                <p>@itemModel?.HelpDescriptionText</p>
                                            }
                                            <a href="@itemModel?.ButtonLink?.Url" class="btn light_blue_btn">
                                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <g clip-path="url(#clip0_25_3041)">
                                                        <path d="M2.0714 7.11625C1.51266 7.01905 1.51266 6.21694 2.0714 6.11974C4.09562 5.76758 5.70561 4.22579 6.14497 2.21868L6.17866 2.06483C6.29954 1.51261 7.08582 1.50917 7.21153 2.06031L7.25242 2.23961C7.70805 4.23723 9.31848 5.76602 11.3371 6.11719C11.8987 6.21491 11.8987 7.02109 11.3371 7.11878C9.31848 7.46997 7.70805 8.99876 7.25242 10.9964L7.21153 11.1757C7.08582 11.7268 6.29954 11.7234 6.17866 11.1712L6.14497 11.0173C5.70561 9.01022 4.09562 7.46841 2.0714 7.11625Z" stroke="#ffffff" stroke-width="1.71003" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        <path d="M11.2527 21.6614C10.4273 22.1928 9.44491 22.4258 8.4688 22.3215C7.49267 22.2172 6.58165 21.7821 5.88717 21.0882L5.28216 20.4832C5.0138 20.2119 4.86328 19.8457 4.86328 19.4642C4.86328 19.0826 5.0138 18.7166 5.28216 18.4453L7.82959 15.9137C8.09813 15.6464 8.46165 15.4963 8.8406 15.4963C9.21954 15.4963 9.58306 15.6464 9.85161 15.9137C10.1229 16.1821 10.489 16.3326 10.8706 16.3326C11.2521 16.3326 11.6183 16.1821 11.8895 15.9137L15.9495 11.8538C16.2179 11.5825 16.3684 11.2164 16.3684 10.8348C16.3684 10.4532 16.2179 10.0871 15.9495 9.81583C15.6821 9.54729 15.532 9.18376 15.532 8.80482C15.532 8.42587 15.6821 8.06235 15.9495 7.7938L18.4014 5.24638C18.6727 4.97804 19.0389 4.82751 19.4203 4.82751C19.802 4.82751 20.1682 4.97804 20.4393 5.24638L21.0443 5.85139C21.7506 6.53607 22.2007 7.44226 22.3195 8.41872C22.4382 9.3952 22.2187 10.3829 21.6971 11.2169C18.9209 15.3386 15.3744 18.8852 11.2527 21.6614Z" stroke="#ffffff" stroke-width="1.71003" stroke-linecap="round" stroke-linejoin="round"></path>
                                                    </g>
                                                    <defs>
                                                        <clipPath id="clip0_25_3041">
                                                            <rect width="24" height="24" fill="white"></rect>
                                                        </clipPath>
                                                    </defs>
                                                </svg>
                                                @itemModel?.ButtonLink?.Name
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                        }

                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="sidebar">
                    <div class="sidebar-item">
                        @if (Model?.RelativeLinks?.Count() > 0)
                        {
                            <div class="sidebar-list">
                                <h4>Relevante links</h4>
                                <ul>
                                    @foreach (var item in Model?.RelativeLinks)
                                    {
                                        <li>
                                            <a href="@item?.Url">@item?.Name</a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }

                        @if (Model?.NefAddressBlocks?.Count > 0)
                        {
                            @foreach (var address in Model?.NefAddressBlocks)
                            {
                                var addressModel = address?.Content as NefAddressBlock;
                                <div class="sidebar-list">
                                    <h4>@addressModel?.Heading</h4>
                                    <div class="sidebar-detail">
                                        @if (addressModel?.ContentBlock?.Count > 0)
                                        {
                                            @foreach (var item in addressModel?.ContentBlock)
                                            {
                                                var block = item?.Content as DescriptionText;
                                                <div class="sidebar-detail-list">
                                                    @Html.Raw(block?.RichTextContent)
                                                </div>
                                            }
                                        }
                                    </div>

                                </div>
                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* 
<div class="container">
    <label for="options" class="form-label">Vælg en mulighed</label>
    <select id="options" class="form-select">
        <option value="">Vælg venligst</option>
        <option value="option1">Jeg flytter ind på leveringsadressen</option>
        <option value="option2">Jeg ønsker at skifte til nef Strøm</option>
    </select>

    <label for="deliveryDate" class="form-label mt-3">Ønsket leveringsdato</label>
    <input type="text" id="deliveryDate" class="form-control datepicker">
</div>
<script>
    $(document).ready(function () {
        const optionsSelect = $("#options");
        const dateInput = $("#deliveryDate");

        // Define Danish public holidays (YYYY-MM-DD format)
        const holidays = [
            "2025-01-01", "2025-04-18", "2025-04-21", "2025-05-01",
            "2025-05-08", "2025-06-05", "2025-12-24", "2025-12-25", "2025-12-26"
        ];

        function isHoliday(date) {
            //const formattedDate = date.toISOString().split('T')[0];
            const formattedDate = date.toLocaleDateString("sv-SE"); // "YYYY-MM-DD" format
            return holidays.includes(formattedDate);
        }

        function getNextBusinessDay(date) {
            let nextDay = new Date(date);
            do {
                nextDay.setDate(nextDay.getDate() + 1);
            } while (nextDay.getDay() === 0 || nextDay.getDay() === 6 || isHoliday(nextDay));
            return nextDay;
        }

        function addBusinessDays(startDate, days) {
            let date = new Date(startDate);
            let count = 0;
            while (count < days) {
                date.setDate(date.getDate() + 1);
                if (date.getDay() !== 0 && date.getDay() !== 6 && !isHoliday(date)) {
                    count++;
                }
            }
            return date;
        }

        function subtractBusinessDays(startDate, days) {
            let date = new Date(startDate);
            let count = 0;
            while (count < days) {
                date.setDate(date.getDate() - 1);
                if (date.getDay() !== 0 && date.getDay() !== 6 && !isHoliday(date)) {
                    count++;
                }
            }
            return date;
        }

        function updateDatePicker() {
            let today = new Date();
            let minDate = today, maxDate = null;

            if (optionsSelect.val() === "option1") {
                // "Jeg flytter ind på leveringsadressen"
                minDate = subtractBusinessDays(today, 5);
                maxDate = addBusinessDays(today, 60);
            } else if (optionsSelect.val() === "option2") {
                // "Jeg ønsker at skifte til nef Strøm"
                let now = new Date();
                let currentHour = now.getHours();

                if (currentHour < 12) {
                    minDate = addBusinessDays(today, 1);
                } else {
                    minDate = addBusinessDays(today, 2);
                }

                // Ensure minDate is the next business day (if it falls on a holiday)
                if (isHoliday(minDate)) {
                    minDate = getNextBusinessDay(minDate);
                }
            }

            dateInput.datepicker("destroy").datepicker({
                format: "dd-mm-yyyy",
                startDate: minDate,
                endDate: maxDate,
                autoclose: true,
                todayHighlight: true,
                daysOfWeekDisabled: [0, 6], // Disable weekends
                beforeShowDay: function (date) {
                    if (isHoliday(date)) {
                        return { enabled: false, classes: "text-danger", tooltip: "Holiday" };
                    }
                    return true;
                }
            });
        }

        optionsSelect.change(updateDatePicker);
        updateDatePicker();
    });
</script>
 *@
