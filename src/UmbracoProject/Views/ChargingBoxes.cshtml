@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ChargingBoxes>
@{
	Layout = "Master.cshtml";
}

@await Html.GetBlockGridHtmlAsync(Model, "grid")

<div class="modal fade static_Backdrop" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <video width="100%" height="240" controls>
                    <source src="" type="video/mp4">
                    <source src="movie.ogg" type="video/ogg">
                </video>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn dark_blue_bg white" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Script to bind the video URL -->
<script>
    $(document).on('click', '.videoBtn', function () {
        // Grab the URL from the button's data-href attribute
         debugger
        var videoURL = $(this).data('href');
        // console.log(videoURL)
        // Get the target modal's id (e.g., "#modalId")
        var targetModal = $(this).data('bs-target');
        // Find the modal element
        var modal = $(targetModal);

        // Update the <source> element for the mp4 video
        modal.find('video source[type="video/mp4"]').attr('src', videoURL);

        // Reload the video element so it picks up the new source
        modal.find('video').get(0).load();
    });
</script>